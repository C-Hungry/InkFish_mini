<view class='article'>
  <view class='article-title'>
    标题党标题党标题党
  </view>
  <view class='article-header'>
    <view class='article-author'>csq</view>
    <view class='article-createtime'>2018-06-03 11:00</view>
  </view>
  <view class='article-content'>
    以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。
  </view>
  <!-- <view class='article-comment'>
    以前写前端项目打包部署，都自从用了Jenkins持续集成工具，写前端项目越来越工程化，再也不用担心忘记部署项目，也不用烦躁每次打包压缩后还要部署多个服务器和环境，更开心的是每次家里写完代码，不用远程公司部署项目，提交代码后自动会为你部署。本文基于React的前端项目和GitLab的代码仓库以及Windows(其他系统平台大同小异) ，简述Jenkins实现自动部署的配置。
  </view> -->
</view>